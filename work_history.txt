Day 1
create a github repository called recipe-app-api
create a Dockerfile
create a requirements.txt
create app folder
build a docker: docker build .
create a docker-compose.yml
run "docker-compose build"
install django using docker-compose: 
run "docker-compose run app sh -c "django-admin.py startproject app ." "
commit: git add .; git commit -a
set up travis-ci by linking it to github
create .travis.yml configuration file
add flake8 to requirements
create .flake8 config file in the app folder
commit
exercise unit test: run "docker-compose build; docker-compose run app sh -c "python manage.py test && flake8""
Note whenever a package added, run docker-compose build first before "docker-compose build; docker-compose run app sh -c "python manage.py test && flake8""

create core app
create tests folder

create a User model
set it in settings
make migration: run "docker-compose run app sh -c "python manage.py makemigrations core""

create postgres
edit Dockerfile, docker-compose
edit settings
run "docker-compose up"
commit

create a superuser by running "docker-compose run app sh -c "python manage.py createsuperuser""

Add upload image endpoint
Pillow needs dependent packages; go to Dockerfile and add jpeg-dev, musl-dev, zlib, and zlib-dev
RUN apk add --update --no-cache postgresql-client jpeg-dev
RUN apk add --update --no-cache --virtual .tmp-build-deps \
        gcc libc-dev linux-headers postgresql-dev musl-dev zlib zlib-dev
Whenever a new package added, run "docker-compose build"


References
Dockerfile ref https://docs.docker.com/engine/reference/builder/
Dockerfile code https://gist.github.com/LondonAppDev/27c64d2c2df3555470812d4d77611389
docker-compose doc https://docs.docker.com/compose/
docker-compose code https://gist.github.com/LondonAppDev/c45ff292b4edcc6ebd90f71722d9988c
django startproject https://docs.djangoproject.com/en/2.1/ref/django-admin/#startproject
docker-compose run https://docs.docker.com/compose/reference/run/
env var in Dockerfile https://docs.docker.com/compose/environment-variables/
command in django https://docs.djangoproject.com/en/2.1/howto/custom-management-commands/#module-django.core.management
call command in django https://docs.djangoproject.com/en/2.1/ref/django-admin/#django.core.management.call_command
wait for db in django unit test https://stackoverflow.com/questions/52621819/django-unit-test-wait-for-database
writine custom commands https://docs.djangoproject.com/en/2.1/howto/custom-management-commands/#module-django.core.management



